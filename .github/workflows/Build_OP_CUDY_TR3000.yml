name: Build_CUDY_TR3000

on:
  repository_dispatch:
  workflow_dispatch:
    inputs:
      REPO_URL:
        description: "Select REPO URL"
        required: false
        default: "lede"
        type: choice
        options:
          - lede
          - imm
      device_config:
        description: "Select your device"
        required: false
        default: "U-Boot"
        type: choice
        options:
          - U-Boot
          - V1
      log_switch:
        description: "Compile log switch"
        required: false
        default: "false"
        type: choice
        options:
          - true
          - false

env:
  REPO_BRANCH: master
  UPLOAD_BIN_DIR: true
  UPLOAD_FIRMWARE: true
  UPLOAD_RELEASE: true
  TZ: Asia/Shanghai
  
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Free disk space
      uses: jlumbroso/free-disk-space@main
      with:
        tool-cache: false
        android: true
        dotnet: true

    - name: Initialization environment
      id: init
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo -E apt-get -y update
        sudo -E apt-get -y install $(curl -fsSL https://raw.githubusercontent.com/LeeHe-gif/depend_ubuntu2204_openwrt/main/depend_ubuntu2204_openwrt)
        sudo timedatectl set-timezone "${TZ}"
        echo "status=success" >> ${GITHUB_OUTPUT}
        
    - name: Clone source code
      id: codes
      if: ${{ steps.init.outputs.status }} == 'success' && !cancelled()
      run: |
        case "${{ inputs.REPO_URL }}" in
            "lede")
                git clone --depth 1 https://github.com/coolsnowwolf/lede -b $REPO_BRANCH openwrt
                echo 'src-git modem https://github.com/FUjr/QModem.git;main' >> feeds.conf.default
                ;;
            "imm")
                git clone --depth 1 https://github.com/immortalwrt/immortalwrt -b $REPO_BRANCH openwrt
                git clone https://github.com/xiaorouji/openwrt-passwall2 openwrt/package/feeds/openwrt-passwall2
                cd openwrt
                echo 'src-git istore https://github.com/linkease/istore;main' >> feeds.conf.default
                ;;
            *)
                echo "❌ 错误：不支持的源码仓库!"
                exit 1
                ;;
        esac

    - name: Free up disk space
      run: |
        sudo mkdir -p -m 777 /mnt/openwrt/{dl,staging_dir,build_dir}
        sudo chown -R $USER:$GROUPS /mnt/openwrt
        ln -sfn /mnt/openwrt/dl openwrt/dl
        ln -sfn /mnt/openwrt/staging_dir openwrt/staging_dir
        ln -sfn /mnt/openwrt/build_dir openwrt/build_dir
        
    - name: Update & Install feeds
      working-directory: ./openwrt
      run: |
        ./scripts/feeds update -a
        ./scripts/feeds install -a
        ./scripts/feeds install -a -f -p modem

    - name: Configuration Customization
      run: |
        # 确定配置文件路径
        case "${{ inputs.REPO_URL }}-${{ inputs.device_config }}" in
            "lede-U-Boot")
                CONFIG_FILE="config/CUDY_TR3000-UBOOT.config"
                CUSTOM_SCRIPT="./customize.sh"
                ;;
            "lede-V1")
                CONFIG_FILE="config/CUDY_TR3000_V1.config"
                CUSTOM_SCRIPT="./customize.sh"
                ;;
            "imm-*")
                CONFIG_FILE="config/IMM-CUDY_TR3000.CONFIG"
                CUSTOM_SCRIPT="./imm-customize.sh"
                ;;
            *)
                echo "❌ 错误：不支持的配置组合!"
                exit 1
                ;;
        esac

        # 验证配置文件存在
        if [[ ! -f "${CONFIG_FILE}" ]]; then
            echo "❌ 错误：配置文件 ${CONFIG_FILE} 不存在"
            ls -l config/ || true
            exit 1
        fi

        # 执行自定义脚本
        chmod +x ${CUSTOM_SCRIPT} && ${CUSTOM_SCRIPT}
        [[ -d "files" ]] && mv -f files openwrt/files
        cp -fv "${CONFIG_FILE}" openwrt/.config
        cd openwrt && make defconfig
        
    - name: Download package
      run: |
        cd openwrt/
        make download -j$(nproc) || { echo "❌ 下载失败"; exit 1; }
        find dl -size -1024c -delete

    - name: Compile the OpenWrt
      id: compile
      run: |
        cd openwrt/
        if [[ "${{ inputs.log_switch }}" == "true" ]]; then
            make -j1 V=s
        else
            make -j$(nproc)
        fi
        grep '^CONFIG_TARGET.*DEVICE.*=y' .config | sed -r 's/.*DEVICE_(.*)=y/\1/' > DEVICE_NAME
        [ -s DEVICE_NAME ] && echo "DEVICE_NAME=_$(cat DEVICE_NAME)" >> $GITHUB_ENV
        echo "FILE_DATE=_$(date +"%Y%m%d%H%M")" >> $GITHUB_ENV
        echo "status=success" >> ${GITHUB_OUTPUT}

    - name: Organize files
      id: organize
      if: env.UPLOAD_FIRMWARE == 'true' && steps.compile.outputs.status == 'success'
      run: |
        cd openwrt/bin/targets/*/* || { echo "❌ 固件目录不存在"; exit 1; }
        rm -rf packages
        echo "FIRMWARE=$PWD" >> $GITHUB_ENV
        echo "status=success" >> ${GITHUB_OUTPUT}

    - name: Upload firmware directory
      uses: actions/upload-artifact@main
      if: steps.organize.outputs.status == 'success' && !cancelled()
      with:
        name: OpenWrt_firmware${{ env.DEVICE_NAME }}${{ env.FILE_DATE }}
        path: ${{ env.FIRMWARE }}/*

    - name: Generate release info
      id : release
      if: env.UPLOAD_RELEASE == 'true' && steps.organize.outputs.status == 'success' 
      run: |
        echo "release_tag=$(date +"%Y.%m.%d-%H%M")" >> $GITHUB_OUTPUT
        cat <<EOF > release.txt
        🚀 OpenWrt 固件编译结果
        ----------------------
        设备: CUDY_TR3000 (${{ inputs.device_config }}版)
        源码: ${{ inputs.REPO_URL == 'lede' && 'coolsnowwolf/lede' || 'immortalwrt/immortalwrt' }}
        分支: $REPO_BRANCH
        时间: $(date +"%Y-%m-%d %H:%M")
        EOF

    - name: Upload firmware to release
      uses: softprops/action-gh-release@v1
      if: steps.organize.outputs.status == 'success' && !cancelled()
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.release.outputs.release_tag }}
        body_path: release.txt
        files: ${{ env.FIRMWARE }}/*

    - name: Cleanup workflow runs
      uses: LeeHe-gif/delete-workflow-runs@main
      with:
        retain_days: 1
        keep_minimum_runs: 3
        token: ${{ secrets.GITHUB_TOKEN }}
