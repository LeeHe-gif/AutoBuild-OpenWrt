name: Build_MangoPi_M28C

on: 
  repository_dispatch:
  workflow_dispatch:
    inputs:
      device_config:
        description: "选择内核"
        required: false
        default: "6.12.x"
        type: choice
        options:
          - latest
          - 6.12.x
      log_switch:
        description: "编译日志开关"
        required: false
        default: "false"
        type: choice
        options:
          - true
          - false
      wifi:
        description: "是否加自带wifi网卡驱动"
        required: false
        default: "true"
        type: choice
        options:
          - true
          - false
env:
  REPO_URL: https://github.com/coolsnowwolf/lede
  REPO_BRANCH: master
  UPLOAD_FIRMWARE: true
  UPLOAD_RELEASE: true
  TZ: Asia/Shanghai
  
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@master

    - name: Free disk space
      uses: jlumbroso/free-disk-space@main
      with:
        tool-cache: false
        android: true
        dotnet: true

    - name: Initialization environment
      id: init
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo -E apt-get -y update
        sudo -E apt-get -y install $(curl -fsSL https://raw.githubusercontent.com/LeeHe-gif/depend_ubuntu2204_openwrt/main/depend_ubuntu2204_openwrt)
        sudo timedatectl set-timezone "${TZ}"
        echo "status=success" >> ${GITHUB_OUTPUT}
        
    - name: Clone source code
      id: codes
      if: ${{ steps.init.outputs.status }} == 'success' && !cancelled()
      run: |
        git clone --depth 1 $REPO_URL -b $REPO_BRANCH openwrt
        cd openwrt
        git clone https://github.com/sirpdboy/luci-app-eqosplus package/luci-app-eqosplus
        echo 'src-git modem https://github.com/FUjr/QModem.git;main' >> feeds.conf.default
        
    - name: Cache OpenWrt downloads
      uses: actions/cache@v3
      if: ${{ steps.codes.outputs.status }} == 'success' && !cancelled()
      with:
        path: |
          openwrt/dl
          openwrt/build_dir
        key: ${{ runner.os }}-openwrt-${{ hashFiles('openwrt/.config') }}

    - name: Free up disk space
      run: |
        sudo mkdir -p /mnt/openwrt/{dl,staging_dir,build_dir}
        sudo chown -R $USER:$GROUPS /mnt/openwrt
        ln -sfn /mnt/openwrt/dl openwrt/dl
        ln -sfn /mnt/openwrt/staging_dir openwrt/staging_dir
        ln -sfn /mnt/openwrt/build_dir openwrt/build_dir
        
    - name: Update & Install feeds
      working-directory: ./openwrt
      run: |
        ./scripts/feeds update -a
        sed -i 's/PKG_VERSION:=0.46.033/PKG_VERSION:=0.46.079/' feeds/luci/applications/luci-app-openclash/Makefile
        ./scripts/feeds install -a

    - name: Configuration Customization
      run: |
        if [[ "${{ inputs.device_config }}" == "latest" ]]; then
            CONFIG_FILE="config/MangoPi_M28C.config"
        else
            CONFIG_FILE="config/MangoPi_M28C-6.12.x.config"
        fi
        chmod +x ./customize.sh && ./customize.sh
        [[ -d "files" ]] && mv -f files openwrt/files
        [[ -f "${CONFIG_FILE}" ]] && cp -f ${CONFIG_FILE} openwrt/.config
        if [[ "${{ inputs.wifi }}" == "true" ]]; then
            sed -i 's/# CONFIG_PACKAGE_kmod-mmc is not set/CONFIG_PACKAGE_kmod-mmc=y/' .config
            sed -i 's/# CONFIG_PACKAGE_kmod-aic8800s is not set/CONFIG_PACKAGE_kmod-aic8800s=y/' .config
        fi
        cd openwrt && make defconfig
        
    - name: Download package
      run: |
        cd openwrt/
        make download -j$(nproc) || { echo "Download failed"; exit 1; }
        find dl -size -1024c -delete

    - name: Compile the OpenWrt
      id: compile
      run: |
        cd openwrt/
        if [[ "${{ inputs.log_switch }}" == "true" ]]; then
            make -j1 V=s
        else
            make -j$(nproc)
        fi
        grep '^CONFIG_TARGET.*DEVICE.*=y' .config | sed -r 's/.*DEVICE_(.*)=y/\1/' > DEVICE_NAME
        [ -s DEVICE_NAME ] && echo "DEVICE_NAME=_$(cat DEVICE_NAME)" >> $GITHUB_ENV
        echo "FILE_DATE=_$(date +"%Y%m%d%H%M")" >> $GITHUB_ENV
        echo "status=success" >> $GITHUB_OUTPUT
        
    - name: Organize files
      id: organize
      if: env.UPLOAD_FIRMWARE == 'true' && steps.compile.outputs.status == 'success'
      run: |
        cd openwrt/bin/targets/*/* && rm -rf packages
        echo "FIRMWARE=$PWD" >> $GITHUB_ENV
        echo "status=success" >> $GITHUB_OUTPUT

    - name: Upload firmware directory
      uses: actions/upload-artifact@main
      if: steps.organize.outputs.status == 'success' && !cancelled()
      with:
        name: OpenWrt_firmware${{ env.DEVICE_NAME }}${{ env.FILE_DATE }}
        path: ${{ env.FIRMWARE }}/*

    - name: Generate release tag
      id: tag
      if: env.UPLOAD_RELEASE == 'true' && steps.organize.outputs.status == 'success'
      run: |
        echo "release_tag=$(date +"%Y.%m.%d-%H%M")" >> $GITHUB_OUTPUT
        echo "使用lede源码编译${{ inputs.device_config }}内核MangoPi_M28C的固件" > release.txt
        echo "status=success" >> $GITHUB_OUTPUT

    - name: Upload firmware to release
      uses: softprops/action-gh-release@v1
      if: steps.tag.outputs.status == 'success' && !cancelled()
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.tag.outputs.release_tag }}
        body_path: release.txt
        files: ${{ env.FIRMWARE }}/*

    - name: Delete workflow runs
      uses: LeeHe-gif/delete-workflow-runs@main
      with:
        retain_days: 1
        keep_minimum_runs: 3
        token: ${{ secrets.GITHUB_TOKEN }}
